{
  "root": true,
  "env": {
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2018
  },
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/component-selector": [
          "error",
          { "type": "element", "prefix": "", "style": "kebab-case" }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          { "type": "attribute", "prefix": "", "style": "camelCase" }
        ],
        "prettier/prettier": ["error"],
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/no-inferrable-types": "off",
        "arrow-parens": [
          "error",
          "as-needed",
          {
            "requireForBlockBody": false
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": [
              "classProperty",
              "objectLiteralProperty",
              "typeProperty",
              "classMethod",
              "objectLiteralMethod",
              "typeMethod",
              "accessor",
              "enumMember"
            ],
            "format": null,
            "modifiers": ["requiresQuotes"]
          }
        ],
        "brace-style": ["off", "off"],
        "import/order": "off",
        "no-bitwise": ["error", { "allow": ["~"] }],
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/adjacent-overload-signatures": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "prefer-rest-params": "off",
        "prefer-spread": "off",
        "no-underscore-dangle": "off",
        "object-shorthand": "off",
        "quote-props": ["error", "as-needed"],
        "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
        "radix": ["error", "as-needed"],
        "jsdoc/newline-after-description": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["prettier", "plugin:@angular-eslint/template/recommended"],
      "rules": {}
    },
    {
      "files": ["*.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "extends": ["plugin:prettier/recommended"],
      "rules": {
        "prettier/prettier": ["error", { "bracketSameLine": true, "parser": "angular" }]
      }
    }
  ]
}
